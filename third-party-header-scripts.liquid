{%- comment -%}LoadJS{%- endcomment -%}
<script>!function(e){var t=function(t,o,n){"use strict";var r,a=e.document.getElementsByTagName("script")[0],c=e.document.createElement("script");return"boolean"==typeof o&&(r=n,n=o,o=r),c.dataset.src=t,c.async=!n,a.parentNode.insertBefore(c,a),o&&"function"==typeof o&&(c.onload=o),c};"undefined"!=typeof module?module.exports=t:e.loadJS=t}("undefined"!=typeof global?global:this);</script>

{%- comment -%}Data Type change JS{%- endcomment -%}
<script>
const observers = new MutationObserver((mutations) => {
    mutations.forEach(({ addedNodes }) => {
        addedNodes.forEach((node) => {
            if (node.nodeType === 1) {
                if (node.tagName === "SCRIPT") {
                    if (node.src.includes("analytics")) {
                        node.innerHTML = node.innerHTML.replace(".src =", ".dataset.src =")
                        node.setAttribute("data-src", node.src);
                        node.removeAttribute("src");
                    }
                  else if (node.src != ""){
                    node.setAttribute("data-src", node.src);
                    node.removeAttribute("src");
                  }
                 console.log("analytics", node , node.src);
                }
                if (node.tagName === "LINK") {
                    node.setAttribute("data-href", node.href);
                    node.removeAttribute("href");
                }
            }
        });
    });
});

observers.observe(document.documentElement, {
    childList: true,
    subtree: true,
});
</script>

{%- comment -%}Data Type change JS Body{%- endcomment -%}
<script>
let scriptLoaded = false;
const eventsActivity = ["mousedown", "mousemove", "keydown", "scroll", "touchstart", "click", "onclick", "keypress", "touchmove", "pointerdown"];

function loadAsync() {
    if (!scriptLoaded) {
        scriptLoaded = true;
        observers.disconnect();
        setTimeout(() => {
            document.dispatchEvent(new CustomEvent("StartTBOJS"));
        }, 900);
        document.dispatchEvent(new CustomEvent("StartTBOJS"));
    }
}

eventsActivity.forEach((event) => {
    window.addEventListener(event, loadAsync, false);
});

if (window.addEventListener) {
    window.addEventListener("load", () => {
        setTimeout(loadAsync, 3000);
    }, false);
} else if (window.attachEvent) {
    window.attachEvent("onload", () => {
        setTimeout(loadAsync, 3000);
    });
} else {
    window.onload = loadAsync;
}
  
document.addEventListener("StartTBOJS", () => {
    document.querySelectorAll("script[data-src]").forEach((script) => {
        const dataSrc = script.dataset.src;
        if (dataSrc !== null) {
            script.src = dataSrc;
            delete script.dataset.src;
            console.log("StartTBOJS script[data-src]", dataSrc, script);
        }
    });
});
</script>